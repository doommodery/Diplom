import re
import numpy as np
import torch
from typing import Dict, List, Tuple
from transformers import AutoTokenizer, AutoModel
from sklearn.metrics.pairwise import cosine_similarity

from scripts.generation_sentetic_data import CHRONIC_CONDITIONS, SYMPTOMS

class ImprovedSymptomAnalyzer:
    def __init__(self, use_llm: bool = True, symptom_threshold: float = 0.7, condition_threshold: float = 0.75):
        self.symptoms_pool = SYMPTOMS
        self.conditions_pool = CHRONIC_CONDITIONS
        self.symptom_aliases = self._create_symptom_aliases()
        self.condition_aliases = self._create_condition_aliases()
        
        self.use_llm = use_llm
        self.symptom_threshold = symptom_threshold
        self.condition_threshold = condition_threshold
        self.tokenizer = None
        self.model = None
        
        if self.use_llm:
            self._load_model()
    
    def _load_model(self):
        """Загрузка модели для эмбеддингов"""
        try:
            model_name = "cointegrated/rubert-tiny2"
            self.tokenizer = AutoTokenizer.from_pretrained(model_name)
            self.model = AutoModel.from_pretrained(model_name)
            print("LLM модель успешно загружена")
        except Exception as e:
            print(f"Ошибка загрузки модели: {e}")
            self.use_llm = False
    
    def _get_embedding(self, text: str) -> np.ndarray:
        """Получение эмбеддинга для текста"""
        try:
            inputs = self.tokenizer(text, return_tensors="pt", 
                                 truncation=True, padding=True, max_length=512)
            with torch.no_grad():
                outputs = self.model(**inputs)
            return outputs.last_hidden_state.mean(dim=1).numpy()[0]
        except Exception as e:
            print(f"Ошибка получения эмбеддинга: {e}")
            return np.zeros(312) if self.model else np.zeros(1)
    
    def _preprocess_text(self, text: str) -> str:
        """Очистка текста"""
        text = text.lower()
        text = re.sub(r'[^\w\s]', '', text)
        return text
    
    def _match_keywords(self, text: str, aliases: Dict[str, List[str]]) -> List[str]:
        """Поиск по ключевым словам"""
        found = []
        for item, variants in aliases.items():
            if any(variant in text for variant in [item.lower()] + variants):
                found.append(item)
        return found
    
    def _match_with_llm(self, text: str, pool: Dict[str, Dict], threshold: float) -> List[str]:
        """Поиск с использованием LLM"""
        if not self.use_llm:
            return []
            
        try:
            text_embedding = self._get_embedding(text)
            similarities = {}
            
            for item in pool:
                item_embedding = self._get_embedding(item)
                sim = cosine_similarity([text_embedding], [item_embedding])[0][0]
                similarities[item] = sim
            
            return [item for item, sim in sorted(similarities.items(), 
                                              key=lambda x: x[1], 
                                              reverse=True) if sim >= threshold][:3]
        except Exception as e:
            print(f"Ошибка LLM анализа: {e}")
            return []
    
    def analyze_symptoms(self, text: str) -> List[str]:
        """Анализ только симптомов"""
        text = self._preprocess_text(text)
        
        # Поиск по ключевым словам
        keyword_results = self._match_keywords(text, self.symptom_aliases)
        
        # Уточнение с LLM
        if self.use_llm:
            llm_results = self._match_with_llm(text, self.symptoms_pool, self.symptom_threshold)
            combined = list(set(keyword_results + llm_results))
            return combined if combined else ["Не обнаружено"]
        
        return keyword_results if keyword_results else ["Не обнаружено"]
    
    def analyze_conditions(self, text: str) -> List[str]:
        """Анализ только хронических состояний"""
        text = self._preprocess_text(text)
        
        # Поиск по ключевым словам
        keyword_results = self._match_keywords(text, self.condition_aliases)
        
        # Уточнение с LLM
        if self.use_llm:
            llm_results = self._match_with_llm(text, self.conditions_pool, self.condition_threshold)
            combined = list(set(keyword_results + llm_results))
            return combined if combined else ["Не обнаружено"]
        
        return keyword_results if keyword_results else ["Не обнаружено"]
    
    def format_results(self, symptoms: List[str], conditions: List[str]) -> str:
        """Форматирование результатов"""
        symptoms_str = ", ".join(symptoms) if symptoms[0] != "Не обнаружено" else "Не обнаружено"
        conditions_str = ", ".join(conditions) if conditions[0] != "Не обнаружено" else "Не обнаружено"
        return f"Симптомы: {symptoms_str}\nХронические заболевания: {conditions_str}"

    def _create_symptom_aliases(self):
        """Создает альтернативные названия для всех симптомов"""
        return {
            # Общие симптомы
            "Слабость": ["нет сил", "разбитость", "упадок сил", "чувствую слабость", "сил нет"],
            "Усталость": ["утомление", "чувствую усталость", "постоянно устаю"],
            "Потливость": ["сильно потею", "повышенная потливость", "мокрый от пота"],
            "Озноб": ["меня знобит", "чувствую холод", "дрожь в теле"],
            "Ломота в теле": ["все болит", "кости ломит", "тело ломает", "мышцы болят", "все тело болит"],
            "Потеря аппетита": ["не хочу есть", "нет аппетита", "не могу есть"],
            "Жажда": ["хочется пить", "постоянно хочу пить", "сильная жажда"],
            "Головокружение": ["кружится голова", "все плывет", "чувство вращения"],
            "Потеря веса": ["худею", "сбросил вес", "вес уходит"],
            "Увеличение веса": ["поправляюсь", "набираю вес", "стал тяжелее"],
            "Температура 37-38": ["температура 37", "субфебрильная", "невысокая температура"],
            "Температура 38.5+": ["высокая температура", "жар", "температура под 39"],
            
            # Неврологические
            "Головная боль": ["болит голова", "голова раскалывается", "мигрень", "давит в голове"],
            "Мигрень": ["сильная головная боль", "гемикрания"],
            "Нарушение координации": ["шатает", "не могу держать равновесие", "заносит при ходьбе"],
            "Тремор": ["дрожат руки", "трясутся конечности", "дрожь в теле"],
            "Судороги": ["сводит мышцы", "мышечные спазмы", "конвульсии"],
            "Онемение конечностей": ["ноги немеют", "руки немеют", "чувство онемения"],
            "Потеря сознания": ["упал в обморок", "отключился", "обморок"],
            "Спутанность сознания": ["не могу соображать", "мысли путаются", "дезориентация"],
            "Проблемы со сном": ["бессонница", "не могу спать", "плохо засыпаю"],
            "Раздражительность": ["нервничаю", "все бесит", "повышенная раздражительность"],
            "Апатия": ["ничего не хочу", "безразличие", "нет интереса"],
            "Депрессия": ["подавленность", "тоска", "депрессивное состояние"],
            "Тревожность": ["чувство тревоги", "постоянное беспокойство", "тревожное состояние"],
            "Панические атаки": ["паника", "приступ паники", "нехватка воздуха"],
            
            # Респираторные
            "Кашель сухой": ["кашель без мокроты", "дерущий кашель", "першит в горле и кашель"],
            "Кашель с мокротой": ["влажный кашель", "кашель с выделениями", "откашливаю мокроту"],
            "Одышка": ["не хватает воздуха", "тяжело дышать", "задышка"],
            "Хрипы в легких": ["хрипы при дыхании", "свист в груди", "булькает в легких"],
            "Боль в груди при дыхании": ["болит при вдохе", "боль при дыхании", "не могу глубоко вдохнуть"],
            "Кровохарканье": ["кашель с кровью", "кровь при кашле", "кровь в мокроте"],
            "Заложенность носа": ["нос не дышит", "заложен нос", "отек в носу"],
            "Насморк": ["течет из носа", "ринит", "сопли"],
            "Чихание": ["часто чихаю", "приступы чихания"],
            "Потеря обоняния": ["не чувствую запахи", "нет обоняния", "аносмия"],
            
            # Сердечно-сосудистые
            "Боль в груди": ["болит в груди", "давит в груди", "грудная жаба"],
            "Тяжесть в груди": ["тяжесть в области сердца", "ощущение тяжести", "стеснение в груди"],
            "Учащенное сердцебиение": ["тахикардия", "сердце колотится", "пульс учащенный"],
            "Аритмия": ["перебои в сердце", "сердце бьется неровно", "нерегулярный пульс"],
            "Повышенное давление": ["гипертония", "высокое давление", "давление подскочило"],
            "Пониженное давление": ["гипотония", "низкое давление", "давление упало"],
            "Отеки ног": ["ноги отекают", "отеки нижних конечностей", "опухают ноги"],
            
            # ЖКТ
            "Тошнота": ["мутит", "подташнивает", "ощущение тошноты"],
            "Рвота": ["вырвало", "тошнит и рвет", "рвотные позывы"],
            "Изжога": ["жжение в груди", "кислота в горле", "ощущение изжоги"],
            "Боль в животе": ["болит живот", "спазмы в животе", "колики"],
            "Боль в желудке": ["болит желудок", "сосет под ложечкой", "гастралгия"],
            "Вздутие живота": ["живот пучит", "метеоризм", "газы"],
            "Диарея": ["понос", "жидкий стул", "расстройство желудка"],
            "Запор": ["не могу сходить в туалет", "проблемы со стулом", "редкий стул"],
            "Кровь в стуле": ["кровь из заднего прохода", "кровь в кале", "ректальное кровотечение"],
            "Черный стул": ["мелена", "черный кал", "дегтеобразный стул"],
            "Кровь в рвоте": ["рвота с кровью", "кровавая рвота", "гематемезис"],
            
            # Мочеполовая система
            "Частое мочеиспускание": ["часто хожу в туалет", "учащенное мочеиспускание", "поллакиурия"],
            "Боль при мочеиспускании": ["болезненное мочеиспускание", "рези при мочеиспускании", "дизурия"],
            "Кровь в моче": ["гематурия", "моча с кровью", "красная моча"],
            "Боль в почках": ["болит в области почек", "почечная колика", "боль в пояснице"],
            "Боль внизу живота": ["болит низ живота", "тянет низ живота", "тазовая боль"],
            
            # Опорно-двигательная система
            "Боль в спине": ["болит спина", "спина ноет", "дорсалгия"],
            "Боль в пояснице": ["люмбаго", "прострел в пояснице", "болит поясница"],
            "Боль в суставах": ["артралгия", "болят суставы", "ломит суставы"],
            "Боль в мышцах": ["миалгия", "болят мышцы", "мышечная боль"],
            "Боль в шее": ["болит шея", "шейный прострел", "цервикалгия"],
            "Ограничение подвижности": ["не могу двигаться", "скованность", "тугоподвижность"],
            
            # Кожные
            "Сыпь": ["высыпания", "кожная сыпь", "прыщики"],
            "Зуд кожи": ["чешется кожа", "кожный зуд", "сильный зуд"],
            "Сухость кожи": ["кожа сухая", "шелушение", "ксероз"],
            "Желтушность": ["желтая кожа", "иктеричность", "желтуха"],
            "Бледность": ["бледная кожа", "бледный вид", "анемичный вид"],
            "Выпадение волос": ["волосы лезут", "алопеция", "облысение"],
            
            # ЛОР
            "Боль в горле": ["болит горло", "першит горло", "горло саднит"],
            "Боль в ухе": ["отит", "стреляет в ухе", "болит ухо"],
            "Заложенность уха": ["ухо заложило", "плохо слышу", "ощущение заложенности"],
            "Потеря слуха": ["тугоухость", "плохо слышу", "снижение слуха"],
            "Шум в ушах": ["тиннитус", "звон в ушах", "гул в ушах"],
            
            # Глазные
            "Покраснение глаз": ["красные глаза", "конъюнктивит", "глаза воспалены"],
            "Боль в глазах": ["болят глаза", "офтальмалгия", "рези в глазах"],
            "Ухудшение зрения": ["плохо вижу", "зрение упало", "нечеткое зрение"],
            "Двоение в глазах": ["диплопия", "двоится в глазах", "размытое зрение"],
            
            # Другие
            "Увеличение лимфоузлов": ["лимфаденит", "узлы увеличены", "шишки на шее"],
            "Кровоточивость десен": ["десны кровят", "кровь при чистке", "гингивит"]
        }

    def _create_condition_aliases(self):
        """Создает альтернативные названия для хронических состояний"""
        return {
            # Сердечно-сосудистые
            "Гипертония": ["высокое давление", "артериальная гипертензия", "гипертоническая болезнь"],
            "ИБС": ["ишемическая болезнь сердца", "стенокардия", "коронарная болезнь"],
            "Сердечная недостаточность": ["слабое сердце", "ХСН", "кардиальная недостаточность"],
            "Аритмия": ["перебои в сердце", "мерцательная аритмия", "фибрилляция предсердий"],
            "Атеросклероз": ["закупорка сосудов", "бляшки в сосудах", "артериосклероз"],
            "Варикоз": ["варикозное расширение вен", "вены на ногах", "венозная недостаточность"],
            
            # Эндокринные
            "Диабет 1 типа": ["инсулинозависимый диабет", "СД1", "ювенильный диабет"],
            "Диабет 2 типа": ["инсулинонезависимый диабет", "СД2", "диабет взрослых"],
            "Гипотиреоз": ["недостаток гормонов щитовидки", "гипофункция щитовидной железы"],
            "Гипертиреоз": ["тиреотоксикоз", "гиперфункция щитовидки", "базедова болезнь"],
            
            # Респираторные
            "Астма": ["бронхиальная астма", "астматические приступы", "удушье"],
            "ХОБЛ": ["хроническая обструктивная болезнь легких", "хронический бронхит курильщика"],
            "Хронический бронхит": ["постоянный бронхит", "длительный кашель", "бронхит курильщика"],
            
            # ЖКТ
            "Гастрит": ["воспаление желудка", "хронический гастрит", "болезнь желудка"],
            "Язва желудка": ["желудочная язва", "пептическая язва", "язвенная болезнь"],
            "Холецистит": ["воспаление желчного", "камни в желчном", "желчнокаменная болезнь"],
            "Панкреатит": ["воспаление поджелудочной", "хронический панкреатит"],
            "СРК": ["синдром раздраженного кишечника", "раздраженный кишечник"],
            
            # Неврологические
            "Эпилепсия": ["эпилептические припадки", "судорожные приступы"],
            "Болезнь Паркинсона": ["паркинсонизм", "дрожательный паралич"],
            "Рассеянный склероз": ["РС", "множественный склероз"],
            "Мигрень": ["мигренозные приступы", "гемикрания"],
            
            # Опорно-двигательные
            "Остеохондроз": ["дегенерация дисков", "хондроз", "проблемы с позвоночником"],
            "Артрит": ["воспаление суставов", "суставы воспалены"],
            "Артроз": ["остеоартроз", "деформирующий артроз", "износ суставов"],
            "Остеопороз": ["хрупкость костей", "потеря костной массы"],
            
            # Психические
            "Депрессия": ["депрессивное расстройство", "клиническая депрессия"],
            "Тревожное расстройство": ["генерализованное тревожное расстройство", "ГТР"],
            "Биполярное расстройство": ["маниакально-депрессивный психоз", "БАР"],
            
            # Другие
            "Хроническая болезнь почек": ["ХБП", "почечная недостаточность"],
            "Анемия": ["малокровие", "низкий гемоглобин"],
            "Аллергия": ["аллергические реакции", "атопия"],
            "Псориаз": ["чешуйчатый лишай", "кожное заболевание"],
            "Гепатит": ["воспаление печени", "вирусный гепатит"],
            "ВИЧ": ["вирус иммунодефицита", "ВИЧ-инфекция"]
        }
    
    # Пример использования
if __name__ == "__main__":
    analyzer = ImprovedSymptomAnalyzer(use_llm=True)
    
    # Анализ симптомов отдельно
    symptoms_text = "У меня высокая температура и болит голова, чувствую слабость"
    symptoms = analyzer.analyze_symptoms(symptoms_text)
    
    # Анализ хронических состояний отдельно
    conditions_text = "У меня диабет и гипертония"
    conditions = analyzer.analyze_conditions(conditions_text)
    
    # Вывод результатов
    print(analyzer.format_results(symptoms, conditions))
